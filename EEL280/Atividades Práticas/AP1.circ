<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.7.2" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.7.2(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(120,100)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="B"/>
    </comp>
    <comp lib="0" loc="(120,130)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="C"/>
    </comp>
    <comp lib="0" loc="(120,260)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="D"/>
    </comp>
    <comp lib="0" loc="(120,290)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="E"/>
    </comp>
    <comp lib="0" loc="(120,320)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="F"/>
    </comp>
    <comp lib="0" loc="(120,70)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="A"/>
    </comp>
    <comp lib="0" loc="(550,200)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="1" loc="(210,200)" name="XOR Gate">
      <a name="label" val="AD"/>
    </comp>
    <comp lib="1" loc="(240,200)" name="NOT Gate"/>
    <comp lib="1" loc="(330,200)" name="XOR Gate">
      <a name="label" val="BE"/>
    </comp>
    <comp lib="1" loc="(360,200)" name="NOT Gate"/>
    <comp lib="1" loc="(440,200)" name="XOR Gate">
      <a name="label" val="CF"/>
    </comp>
    <comp lib="1" loc="(470,200)" name="NOT Gate"/>
    <comp lib="1" loc="(550,200)" name="AND Gate">
      <a name="inputs" val="3"/>
      <a name="label" val="G"/>
    </comp>
    <comp loc="(410,360)" name="Ap1">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <wire from="(120,100)" to="(260,100)"/>
    <wire from="(120,130)" to="(370,130)"/>
    <wire from="(120,260)" to="(140,260)"/>
    <wire from="(120,290)" to="(140,290)"/>
    <wire from="(120,320)" to="(150,320)"/>
    <wire from="(120,70)" to="(130,70)"/>
    <wire from="(130,180)" to="(150,180)"/>
    <wire from="(130,70)" to="(130,180)"/>
    <wire from="(140,220)" to="(140,260)"/>
    <wire from="(140,220)" to="(150,220)"/>
    <wire from="(140,290)" to="(140,330)"/>
    <wire from="(140,330)" to="(260,330)"/>
    <wire from="(150,300)" to="(150,320)"/>
    <wire from="(150,300)" to="(370,300)"/>
    <wire from="(240,50)" to="(240,200)"/>
    <wire from="(240,50)" to="(490,50)"/>
    <wire from="(260,100)" to="(260,180)"/>
    <wire from="(260,180)" to="(270,180)"/>
    <wire from="(260,220)" to="(260,330)"/>
    <wire from="(260,220)" to="(270,220)"/>
    <wire from="(360,200)" to="(360,330)"/>
    <wire from="(360,330)" to="(490,330)"/>
    <wire from="(370,130)" to="(370,180)"/>
    <wire from="(370,180)" to="(380,180)"/>
    <wire from="(370,220)" to="(370,300)"/>
    <wire from="(370,220)" to="(380,220)"/>
    <wire from="(470,200)" to="(500,200)"/>
    <wire from="(490,180)" to="(500,180)"/>
    <wire from="(490,220)" to="(490,330)"/>
    <wire from="(490,220)" to="(500,220)"/>
    <wire from="(490,50)" to="(490,180)"/>
  </circuit>
  <vhdl name="Ap1">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY Ap1 IS&#13;
  PORT (&#13;
  ------------------------------------------------------------------------------&#13;
  --Insert input ports below&#13;
    clock      : IN  std_logic;                    -- input bit example&#13;
    val        : IN  std_logic_vector(3 DOWNTO 0); -- input vector example&#13;
    A          : IN  std_logic;
    B          : IN  std_logic;
    C          : IN  std_logic;
    D          : IN  std_logic;
    E          : IN  std_logic;
    F          : IN  std_logic;
    AD         : IN  std_logic;
    BE         : IN  std_logic;
    CF         : IN  std_logic;
  ------------------------------------------------------------------------------&#13;
  --Insert output ports below&#13;
    max        : OUT std_logic;                    -- output bit example&#13;
    cpt        : OUT std_logic_vector(3 DOWNTO 0);  -- output vector example&#13;
    H          : OUT std_logic;
    I          : OUT std_logic;
    J          : OUT std_logic;
    G          : OUT std_logic
    );&#13;
END Ap1;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF Ap1 IS&#13;
&#13;
BEGIN&#13;

H &lt;= A xnor D;
I &lt;= B xnor E;
J &lt;= C xnor F;
G &lt;= AD and BE and CF;

END TypeArchitecture;&#13;
</vhdl>
</project>
