<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.7.2" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.7.2(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="64.0"/>
    <comp lib="0" loc="(1460,1400)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="ONLINE"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(150,1070)" name="Clock">
      <a name="label" val="Girar_Dado"/>
    </comp>
    <comp lib="0" loc="(160,1130)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Parar"/>
    </comp>
    <comp lib="0" loc="(160,1160)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Reiniciar"/>
    </comp>
    <comp lib="1" loc="(1610,1440)" name="OR Gate">
      <a name="facing" val="south"/>
    </comp>
    <comp lib="1" loc="(320,1060)" name="AND Gate">
      <a name="negate0" val="true"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="2" loc="(1560,1440)" name="Demultiplexer">
      <a name="facing" val="west"/>
    </comp>
    <comp lib="5" loc="(1060,120)" name="7-Segment Display">
      <a name="labelvisible" val="true"/>
    </comp>
    <comp lib="5" loc="(1060,970)" name="7-Segment Display">
      <a name="labelvisible" val="true"/>
    </comp>
    <comp lib="5" loc="(1190,120)" name="7-Segment Display">
      <a name="labelvisible" val="true"/>
    </comp>
    <comp lib="5" loc="(1220,970)" name="7-Segment Display">
      <a name="labelvisible" val="true"/>
    </comp>
    <comp lib="5" loc="(1420,550)" name="LED"/>
    <comp lib="5" loc="(150,1100)" name="Button">
      <a name="label" val="Somar_J1"/>
    </comp>
    <comp lib="5" loc="(1610,560)" name="7-Segment Display"/>
    <comp lib="5" loc="(1760,120)" name="7-Segment Display">
      <a name="labelvisible" val="true"/>
    </comp>
    <comp lib="5" loc="(1770,980)" name="7-Segment Display">
      <a name="labelvisible" val="true"/>
    </comp>
    <comp lib="5" loc="(410,240)" name="7-Segment Display">
      <a name="labelvisible" val="true"/>
    </comp>
    <comp lib="5" loc="(770,550)" name="LED"/>
    <comp lib="5" loc="(960,570)" name="7-Segment Display"/>
    <comp lib="8" loc="(1126,898)" name="Text">
      <a name="text" val="JOGADOR"/>
    </comp>
    <comp lib="8" loc="(1147,62)" name="Text">
      <a name="text" val="CPU"/>
    </comp>
    <comp lib="8" loc="(1430,625)" name="Text">
      <a name="text" val="J1 WINS !"/>
    </comp>
    <comp lib="8" loc="(1789,67)" name="Text">
      <a name="text" val="Número Anterior CPU"/>
    </comp>
    <comp lib="8" loc="(1789,919)" name="Text">
      <a name="text" val="Número Anterior J1"/>
    </comp>
    <comp lib="8" loc="(242,953)" name="Text">
      <a name="font" val="SansSerif bold 23"/>
      <a name="text" val="Control + K - DADO !"/>
    </comp>
    <comp lib="8" loc="(408,175)" name="Text">
      <a name="text" val="DADO"/>
    </comp>
    <comp lib="8" loc="(785,634)" name="Text">
      <a name="text" val="CPU WINS"/>
    </comp>
    <comp loc="(1060,310)" name="decoder1">
      <a name="appearance" val="logisim_evolution"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(1070,1190)" name="decoder1">
      <a name="appearance" val="logisim_evolution"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(1390,1190)" name="decoder2">
      <a name="appearance" val="logisim_evolution"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(1390,310)" name="decoder2">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1550,690)" name="decoder_placar">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1920,320)" name="decoder_dado">
      <a name="appearance" val="logisim_evolution"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(1940,1180)" name="decoder_dado">
      <a name="appearance" val="logisim_evolution"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(390,510)" name="decoder_dado">
      <a name="appearance" val="logisim_evolution"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(590,1070)" name="JOGO21">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(900,690)" name="decoder_placar">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <wire from="(1010,260)" to="(1080,260)"/>
    <wire from="(1010,50)" to="(1010,260)"/>
    <wire from="(1010,50)" to="(1090,50)"/>
    <wire from="(1020,270)" to="(1070,270)"/>
    <wire from="(1020,60)" to="(1020,270)"/>
    <wire from="(1020,60)" to="(1080,60)"/>
    <wire from="(1040,100)" to="(1040,220)"/>
    <wire from="(1040,100)" to="(1070,100)"/>
    <wire from="(1040,220)" to="(1120,220)"/>
    <wire from="(1060,1030)" to="(1060,1050)"/>
    <wire from="(1060,1050)" to="(1110,1050)"/>
    <wire from="(1060,180)" to="(1060,230)"/>
    <wire from="(1060,230)" to="(1110,230)"/>
    <wire from="(1060,310)" to="(1070,310)"/>
    <wire from="(1060,330)" to="(1080,330)"/>
    <wire from="(1060,350)" to="(1090,350)"/>
    <wire from="(1060,370)" to="(1100,370)"/>
    <wire from="(1060,390)" to="(1110,390)"/>
    <wire from="(1060,410)" to="(1120,410)"/>
    <wire from="(1060,430)" to="(1130,430)"/>
    <wire from="(1060,90)" to="(1060,120)"/>
    <wire from="(1060,90)" to="(1130,90)"/>
    <wire from="(1060,940)" to="(1060,970)"/>
    <wire from="(1060,940)" to="(1150,940)"/>
    <wire from="(1070,100)" to="(1070,120)"/>
    <wire from="(1070,1030)" to="(1070,1040)"/>
    <wire from="(1070,1040)" to="(1100,1040)"/>
    <wire from="(1070,1190)" to="(1130,1190)"/>
    <wire from="(1070,1210)" to="(1120,1210)"/>
    <wire from="(1070,1230)" to="(1080,1230)"/>
    <wire from="(1070,1250)" to="(1100,1250)"/>
    <wire from="(1070,1270)" to="(1110,1270)"/>
    <wire from="(1070,1290)" to="(1120,1290)"/>
    <wire from="(1070,1310)" to="(1130,1310)"/>
    <wire from="(1070,180)" to="(1070,240)"/>
    <wire from="(1070,240)" to="(1100,240)"/>
    <wire from="(1070,270)" to="(1070,310)"/>
    <wire from="(1070,950)" to="(1070,970)"/>
    <wire from="(1070,950)" to="(1140,950)"/>
    <wire from="(1080,1030)" to="(1080,1230)"/>
    <wire from="(1080,180)" to="(1080,250)"/>
    <wire from="(1080,250)" to="(1090,250)"/>
    <wire from="(1080,260)" to="(1080,330)"/>
    <wire from="(1080,60)" to="(1080,120)"/>
    <wire from="(1080,960)" to="(1080,970)"/>
    <wire from="(1080,960)" to="(1130,960)"/>
    <wire from="(1090,250)" to="(1090,350)"/>
    <wire from="(1090,50)" to="(1090,120)"/>
    <wire from="(1090,970)" to="(1120,970)"/>
    <wire from="(1100,1040)" to="(1100,1250)"/>
    <wire from="(1100,240)" to="(1100,370)"/>
    <wire from="(1110,1050)" to="(1110,1270)"/>
    <wire from="(1110,230)" to="(1110,390)"/>
    <wire from="(1120,1220)" to="(1120,1290)"/>
    <wire from="(1120,1220)" to="(1140,1220)"/>
    <wire from="(1120,220)" to="(1120,410)"/>
    <wire from="(1120,970)" to="(1120,1210)"/>
    <wire from="(1130,1230)" to="(1130,1310)"/>
    <wire from="(1130,1230)" to="(1150,1230)"/>
    <wire from="(1130,90)" to="(1130,430)"/>
    <wire from="(1130,960)" to="(1130,1190)"/>
    <wire from="(1140,950)" to="(1140,1220)"/>
    <wire from="(1150,940)" to="(1150,1230)"/>
    <wire from="(1170,1150)" to="(1170,1190)"/>
    <wire from="(1170,290)" to="(1170,310)"/>
    <wire from="(1190,180)" to="(1190,210)"/>
    <wire from="(1190,210)" to="(1460,210)"/>
    <wire from="(1190,90)" to="(1190,120)"/>
    <wire from="(1190,90)" to="(1450,90)"/>
    <wire from="(1200,100)" to="(1200,120)"/>
    <wire from="(1200,100)" to="(1440,100)"/>
    <wire from="(1200,180)" to="(1200,200)"/>
    <wire from="(1200,200)" to="(1400,200)"/>
    <wire from="(1210,110)" to="(1210,120)"/>
    <wire from="(1210,110)" to="(1430,110)"/>
    <wire from="(1210,180)" to="(1210,220)"/>
    <wire from="(1210,220)" to="(1230,220)"/>
    <wire from="(1220,1030)" to="(1220,1040)"/>
    <wire from="(1220,1040)" to="(1430,1040)"/>
    <wire from="(1220,120)" to="(1420,120)"/>
    <wire from="(1220,940)" to="(1220,970)"/>
    <wire from="(1220,940)" to="(1460,940)"/>
    <wire from="(1230,1030)" to="(1230,1060)"/>
    <wire from="(1230,1060)" to="(1420,1060)"/>
    <wire from="(1230,190)" to="(1230,220)"/>
    <wire from="(1230,190)" to="(1410,190)"/>
    <wire from="(1230,960)" to="(1230,970)"/>
    <wire from="(1230,960)" to="(1440,960)"/>
    <wire from="(1240,1030)" to="(1240,1050)"/>
    <wire from="(1240,1050)" to="(1410,1050)"/>
    <wire from="(1240,950)" to="(1240,970)"/>
    <wire from="(1240,950)" to="(1450,950)"/>
    <wire from="(1250,970)" to="(1400,970)"/>
    <wire from="(1330,640)" to="(1330,690)"/>
    <wire from="(1330,640)" to="(1370,640)"/>
    <wire from="(1330,690)" to="(1330,850)"/>
    <wire from="(1370,550)" to="(1370,640)"/>
    <wire from="(1370,550)" to="(1420,550)"/>
    <wire from="(1390,1190)" to="(1450,1190)"/>
    <wire from="(1390,1210)" to="(1400,1210)"/>
    <wire from="(1390,1230)" to="(1410,1230)"/>
    <wire from="(1390,1250)" to="(1420,1250)"/>
    <wire from="(1390,1270)" to="(1430,1270)"/>
    <wire from="(1390,1290)" to="(1440,1290)"/>
    <wire from="(1390,1310)" to="(1450,1310)"/>
    <wire from="(1390,310)" to="(1430,310)"/>
    <wire from="(1390,330)" to="(1420,330)"/>
    <wire from="(1390,350)" to="(1410,350)"/>
    <wire from="(1390,370)" to="(1400,370)"/>
    <wire from="(1390,390)" to="(1460,390)"/>
    <wire from="(1390,410)" to="(1440,410)"/>
    <wire from="(1390,430)" to="(1450,430)"/>
    <wire from="(1400,200)" to="(1400,370)"/>
    <wire from="(1400,970)" to="(1400,1210)"/>
    <wire from="(1410,1050)" to="(1410,1230)"/>
    <wire from="(1410,190)" to="(1410,350)"/>
    <wire from="(1420,1060)" to="(1420,1250)"/>
    <wire from="(1420,120)" to="(1420,330)"/>
    <wire from="(1430,1040)" to="(1430,1270)"/>
    <wire from="(1430,110)" to="(1430,310)"/>
    <wire from="(1440,100)" to="(1440,410)"/>
    <wire from="(1440,960)" to="(1440,1290)"/>
    <wire from="(1450,1230)" to="(1450,1310)"/>
    <wire from="(1450,1230)" to="(1460,1230)"/>
    <wire from="(1450,1400)" to="(1450,1430)"/>
    <wire from="(1450,1400)" to="(1460,1400)"/>
    <wire from="(1450,1430)" to="(1530,1430)"/>
    <wire from="(1450,90)" to="(1450,430)"/>
    <wire from="(1450,950)" to="(1450,1190)"/>
    <wire from="(1460,210)" to="(1460,390)"/>
    <wire from="(1460,940)" to="(1460,1230)"/>
    <wire from="(1470,1180)" to="(1720,1180)"/>
    <wire from="(1470,1470)" to="(1470,1540)"/>
    <wire from="(1470,1470)" to="(1540,1470)"/>
    <wire from="(1470,870)" to="(1470,1180)"/>
    <wire from="(150,1070)" to="(270,1070)"/>
    <wire from="(150,1100)" to="(170,1100)"/>
    <wire from="(1530,510)" to="(1530,660)"/>
    <wire from="(1530,510)" to="(1640,510)"/>
    <wire from="(1530,660)" to="(1560,660)"/>
    <wire from="(1540,1460)" to="(1540,1470)"/>
    <wire from="(1550,520)" to="(1550,670)"/>
    <wire from="(1550,520)" to="(1630,520)"/>
    <wire from="(1550,670)" to="(1570,670)"/>
    <wire from="(1550,690)" to="(1570,690)"/>
    <wire from="(1550,710)" to="(1560,710)"/>
    <wire from="(1550,730)" to="(1560,730)"/>
    <wire from="(1550,750)" to="(1560,750)"/>
    <wire from="(1550,770)" to="(1560,770)"/>
    <wire from="(1550,790)" to="(1560,790)"/>
    <wire from="(1550,810)" to="(1580,810)"/>
    <wire from="(1560,1440)" to="(1590,1440)"/>
    <wire from="(1560,660)" to="(1560,710)"/>
    <wire from="(1560,720)" to="(1560,730)"/>
    <wire from="(1560,720)" to="(1630,720)"/>
    <wire from="(1560,740)" to="(1560,750)"/>
    <wire from="(1560,740)" to="(1620,740)"/>
    <wire from="(1560,760)" to="(1560,770)"/>
    <wire from="(1560,760)" to="(1610,760)"/>
    <wire from="(1560,780)" to="(1560,790)"/>
    <wire from="(1560,780)" to="(1590,780)"/>
    <wire from="(1570,670)" to="(1570,690)"/>
    <wire from="(1580,530)" to="(1580,810)"/>
    <wire from="(1580,530)" to="(1610,530)"/>
    <wire from="(1590,1440)" to="(1590,1450)"/>
    <wire from="(1590,1450)" to="(1610,1450)"/>
    <wire from="(1590,540)" to="(1590,780)"/>
    <wire from="(1590,540)" to="(1620,540)"/>
    <wire from="(1590,860)" to="(1590,1390)"/>
    <wire from="(160,1130)" to="(170,1130)"/>
    <wire from="(160,1160)" to="(160,1540)"/>
    <wire from="(160,1540)" to="(1470,1540)"/>
    <wire from="(1610,1440)" to="(1610,1450)"/>
    <wire from="(1610,530)" to="(1610,560)"/>
    <wire from="(1610,620)" to="(1610,760)"/>
    <wire from="(1620,540)" to="(1620,560)"/>
    <wire from="(1620,620)" to="(1620,740)"/>
    <wire from="(1630,520)" to="(1630,560)"/>
    <wire from="(1630,620)" to="(1630,720)"/>
    <wire from="(1630,720)" to="(1630,1390)"/>
    <wire from="(1640,510)" to="(1640,560)"/>
    <wire from="(1690,20)" to="(1690,320)"/>
    <wire from="(1690,320)" to="(1700,320)"/>
    <wire from="(170,1090)" to="(170,1100)"/>
    <wire from="(170,1090)" to="(370,1090)"/>
    <wire from="(170,1110)" to="(170,1130)"/>
    <wire from="(170,1110)" to="(370,1110)"/>
    <wire from="(170,510)" to="(170,860)"/>
    <wire from="(170,860)" to="(620,860)"/>
    <wire from="(1760,100)" to="(1760,120)"/>
    <wire from="(1760,100)" to="(2000,100)"/>
    <wire from="(1760,180)" to="(1760,210)"/>
    <wire from="(1760,210)" to="(2010,210)"/>
    <wire from="(1770,1040)" to="(1770,1070)"/>
    <wire from="(1770,1070)" to="(2020,1070)"/>
    <wire from="(1770,110)" to="(1770,120)"/>
    <wire from="(1770,110)" to="(1990,110)"/>
    <wire from="(1770,180)" to="(1770,200)"/>
    <wire from="(1770,200)" to="(2040,200)"/>
    <wire from="(1770,960)" to="(1770,980)"/>
    <wire from="(1770,960)" to="(1970,960)"/>
    <wire from="(1780,1040)" to="(1780,1060)"/>
    <wire from="(1780,1060)" to="(2030,1060)"/>
    <wire from="(1780,180)" to="(1780,190)"/>
    <wire from="(1780,190)" to="(2030,190)"/>
    <wire from="(1780,90)" to="(1780,120)"/>
    <wire from="(1780,90)" to="(1990,90)"/>
    <wire from="(1780,970)" to="(1780,980)"/>
    <wire from="(1780,970)" to="(1980,970)"/>
    <wire from="(1790,1040)" to="(1790,1050)"/>
    <wire from="(1790,1050)" to="(2040,1050)"/>
    <wire from="(1790,120)" to="(1980,120)"/>
    <wire from="(1790,950)" to="(1790,980)"/>
    <wire from="(1790,950)" to="(2000,950)"/>
    <wire from="(1800,980)" to="(1990,980)"/>
    <wire from="(1920,340)" to="(1990,340)"/>
    <wire from="(1920,360)" to="(2020,360)"/>
    <wire from="(1920,380)" to="(2010,380)"/>
    <wire from="(1920,400)" to="(1940,400)"/>
    <wire from="(1920,420)" to="(2030,420)"/>
    <wire from="(1920,440)" to="(1980,440)"/>
    <wire from="(1920,80)" to="(1920,320)"/>
    <wire from="(1920,80)" to="(1990,80)"/>
    <wire from="(1940,1200)" to="(2010,1200)"/>
    <wire from="(1940,1220)" to="(2040,1220)"/>
    <wire from="(1940,1240)" to="(2030,1240)"/>
    <wire from="(1940,1260)" to="(1960,1260)"/>
    <wire from="(1940,1280)" to="(2050,1280)"/>
    <wire from="(1940,1300)" to="(2000,1300)"/>
    <wire from="(1940,220)" to="(1940,400)"/>
    <wire from="(1940,220)" to="(2010,220)"/>
    <wire from="(1940,940)" to="(1940,1180)"/>
    <wire from="(1940,940)" to="(2000,940)"/>
    <wire from="(1950,150)" to="(1950,300)"/>
    <wire from="(1950,150)" to="(2000,150)"/>
    <wire from="(1950,300)" to="(2040,300)"/>
    <wire from="(1960,1080)" to="(1960,1260)"/>
    <wire from="(1960,1080)" to="(2020,1080)"/>
    <wire from="(1960,140)" to="(1960,310)"/>
    <wire from="(1960,140)" to="(1990,140)"/>
    <wire from="(1960,310)" to="(2030,310)"/>
    <wire from="(1970,1160)" to="(2060,1160)"/>
    <wire from="(1970,130)" to="(1970,320)"/>
    <wire from="(1970,130)" to="(1980,130)"/>
    <wire from="(1970,320)" to="(1990,320)"/>
    <wire from="(1970,960)" to="(1970,1160)"/>
    <wire from="(1980,1170)" to="(2050,1170)"/>
    <wire from="(1980,120)" to="(1980,130)"/>
    <wire from="(1980,290)" to="(1980,440)"/>
    <wire from="(1980,290)" to="(2040,290)"/>
    <wire from="(1980,970)" to="(1980,1170)"/>
    <wire from="(1990,110)" to="(1990,140)"/>
    <wire from="(1990,1180)" to="(2010,1180)"/>
    <wire from="(1990,320)" to="(1990,340)"/>
    <wire from="(1990,80)" to="(1990,90)"/>
    <wire from="(1990,980)" to="(1990,1180)"/>
    <wire from="(2000,100)" to="(2000,150)"/>
    <wire from="(2000,1150)" to="(2000,1300)"/>
    <wire from="(2000,1150)" to="(2060,1150)"/>
    <wire from="(2000,940)" to="(2000,950)"/>
    <wire from="(2010,1180)" to="(2010,1200)"/>
    <wire from="(2010,210)" to="(2010,220)"/>
    <wire from="(2010,230)" to="(2010,380)"/>
    <wire from="(2010,230)" to="(2040,230)"/>
    <wire from="(2020,1070)" to="(2020,1080)"/>
    <wire from="(2020,210)" to="(2020,360)"/>
    <wire from="(2020,210)" to="(2030,210)"/>
    <wire from="(2030,1060)" to="(2030,1240)"/>
    <wire from="(2030,190)" to="(2030,210)"/>
    <wire from="(2030,310)" to="(2030,420)"/>
    <wire from="(2040,1050)" to="(2040,1220)"/>
    <wire from="(2040,200)" to="(2040,230)"/>
    <wire from="(2040,290)" to="(2040,300)"/>
    <wire from="(2050,1170)" to="(2050,1280)"/>
    <wire from="(2060,1150)" to="(2060,1160)"/>
    <wire from="(220,1050)" to="(220,1170)"/>
    <wire from="(220,1050)" to="(280,1050)"/>
    <wire from="(220,1170)" to="(220,1450)"/>
    <wire from="(220,1170)" to="(370,1170)"/>
    <wire from="(220,1450)" to="(1530,1450)"/>
    <wire from="(270,1030)" to="(270,1070)"/>
    <wire from="(270,1030)" to="(330,1030)"/>
    <wire from="(280,1050)" to="(290,1050)"/>
    <wire from="(330,1030)" to="(330,1060)"/>
    <wire from="(330,1060)" to="(340,1060)"/>
    <wire from="(340,1060)" to="(340,1070)"/>
    <wire from="(340,1070)" to="(370,1070)"/>
    <wire from="(350,1130)" to="(350,1250)"/>
    <wire from="(350,1130)" to="(370,1130)"/>
    <wire from="(350,1250)" to="(690,1250)"/>
    <wire from="(360,1040)" to="(360,1150)"/>
    <wire from="(360,1040)" to="(600,1040)"/>
    <wire from="(360,1150)" to="(370,1150)"/>
    <wire from="(360,190)" to="(360,470)"/>
    <wire from="(360,190)" to="(410,190)"/>
    <wire from="(360,470)" to="(450,470)"/>
    <wire from="(370,200)" to="(370,480)"/>
    <wire from="(370,200)" to="(420,200)"/>
    <wire from="(370,480)" to="(440,480)"/>
    <wire from="(380,210)" to="(380,490)"/>
    <wire from="(380,210)" to="(440,210)"/>
    <wire from="(380,490)" to="(400,490)"/>
    <wire from="(390,220)" to="(390,510)"/>
    <wire from="(390,220)" to="(430,220)"/>
    <wire from="(390,530)" to="(400,530)"/>
    <wire from="(390,550)" to="(430,550)"/>
    <wire from="(390,570)" to="(420,570)"/>
    <wire from="(390,590)" to="(410,590)"/>
    <wire from="(390,610)" to="(440,610)"/>
    <wire from="(390,630)" to="(450,630)"/>
    <wire from="(400,490)" to="(400,530)"/>
    <wire from="(410,190)" to="(410,240)"/>
    <wire from="(410,300)" to="(410,590)"/>
    <wire from="(420,200)" to="(420,240)"/>
    <wire from="(420,300)" to="(420,570)"/>
    <wire from="(430,220)" to="(430,240)"/>
    <wire from="(430,300)" to="(430,550)"/>
    <wire from="(440,210)" to="(440,240)"/>
    <wire from="(440,480)" to="(440,610)"/>
    <wire from="(450,470)" to="(450,630)"/>
    <wire from="(590,1060)" to="(590,1070)"/>
    <wire from="(590,1060)" to="(620,1060)"/>
    <wire from="(590,1090)" to="(600,1090)"/>
    <wire from="(590,1110)" to="(640,1110)"/>
    <wire from="(590,1130)" to="(690,1130)"/>
    <wire from="(590,1150)" to="(630,1150)"/>
    <wire from="(590,1170)" to="(790,1170)"/>
    <wire from="(590,1190)" to="(780,1190)"/>
    <wire from="(600,1040)" to="(600,1090)"/>
    <wire from="(600,1090)" to="(810,1090)"/>
    <wire from="(610,1020)" to="(690,1020)"/>
    <wire from="(610,670)" to="(610,1020)"/>
    <wire from="(610,670)" to="(870,670)"/>
    <wire from="(620,860)" to="(620,1060)"/>
    <wire from="(630,20)" to="(1690,20)"/>
    <wire from="(630,20)" to="(630,1150)"/>
    <wire from="(640,900)" to="(640,1110)"/>
    <wire from="(640,900)" to="(800,900)"/>
    <wire from="(660,850)" to="(1330,850)"/>
    <wire from="(660,850)" to="(660,880)"/>
    <wire from="(660,880)" to="(780,880)"/>
    <wire from="(670,650)" to="(670,690)"/>
    <wire from="(670,650)" to="(710,650)"/>
    <wire from="(670,690)" to="(670,870)"/>
    <wire from="(670,690)" to="(680,690)"/>
    <wire from="(670,870)" to="(790,870)"/>
    <wire from="(690,1020)" to="(690,1130)"/>
    <wire from="(690,1130)" to="(690,1250)"/>
    <wire from="(710,550)" to="(710,650)"/>
    <wire from="(710,550)" to="(770,550)"/>
    <wire from="(780,880)" to="(780,1190)"/>
    <wire from="(790,870)" to="(790,1170)"/>
    <wire from="(800,870)" to="(1470,870)"/>
    <wire from="(800,870)" to="(800,900)"/>
    <wire from="(810,1090)" to="(810,1150)"/>
    <wire from="(810,1150)" to="(840,1150)"/>
    <wire from="(840,1150)" to="(1170,1150)"/>
    <wire from="(840,1150)" to="(840,1190)"/>
    <wire from="(840,1190)" to="(850,1190)"/>
    <wire from="(840,290)" to="(1170,290)"/>
    <wire from="(840,290)" to="(840,310)"/>
    <wire from="(840,310)" to="(840,470)"/>
    <wire from="(840,470)" to="(870,470)"/>
    <wire from="(870,470)" to="(870,670)"/>
    <wire from="(880,520)" to="(880,670)"/>
    <wire from="(880,520)" to="(990,520)"/>
    <wire from="(880,670)" to="(910,670)"/>
    <wire from="(900,530)" to="(900,690)"/>
    <wire from="(900,530)" to="(980,530)"/>
    <wire from="(900,710)" to="(910,710)"/>
    <wire from="(900,730)" to="(980,730)"/>
    <wire from="(900,750)" to="(970,750)"/>
    <wire from="(900,770)" to="(960,770)"/>
    <wire from="(900,790)" to="(940,790)"/>
    <wire from="(900,810)" to="(930,810)"/>
    <wire from="(910,670)" to="(910,710)"/>
    <wire from="(930,540)" to="(930,810)"/>
    <wire from="(930,540)" to="(960,540)"/>
    <wire from="(940,550)" to="(940,790)"/>
    <wire from="(940,550)" to="(970,550)"/>
    <wire from="(960,540)" to="(960,570)"/>
    <wire from="(960,630)" to="(960,770)"/>
    <wire from="(970,550)" to="(970,570)"/>
    <wire from="(970,630)" to="(970,750)"/>
    <wire from="(980,530)" to="(980,570)"/>
    <wire from="(980,630)" to="(980,730)"/>
    <wire from="(980,730)" to="(980,860)"/>
    <wire from="(980,860)" to="(1590,860)"/>
    <wire from="(990,520)" to="(990,570)"/>
  </circuit>
  <vhdl name="JOGO21">--------------------------------------------------------------------------------
-- Project :
-- File    :
-- Autor   :
-- Date    :
--
--------------------------------------------------------------------------------
-- Description :
--
--------------------------------------------------------------------------------

LIBRARY ieee;
LIBRARY work;
USE ieee.std_logic_1164.all;

ENTITY JOGO21 IS
  PORT (
  ------------------------------------------------------------------------------
  ---J1-------------
  Dado,Somar : IN std_logic;
  Dado_visor : OUT std_logic_vector(4 DOWNTO 0);
  SomaTotal : OUT std_logic_vector(4 DOWNTO 0);
  LstNum_J1: OUT std_logic_vector(4 DOWNTO 0);

  --- Bot------------------
  CPU_turn : IN std_logic;
  Bot_sum: OUT std_logic_vector(4 DOWNTO 0);
  LstNum_CPU: OUT std_logic_vector(4 DOWNTO 0);
  ------------------

  ----Decisão---
  Ajd, Bcd : IN STD_LOGIC_VECTOR(4 DOWNTO 0); 
  reset: IN std_logic;
  CPU_w,J1_W: OUT STD_LOGIC
    

  
    );
END JOGO21;

--------------------------------------------------------------------------------
--Complete your VHDL description below
--------------------------------------------------------------------------------

ARCHITECTURE TypeArchitecture OF JOGO21 IS
-- Implementação do DADO --
type tipo_estado is (E1,E2,E3,E4,E5,E6);
signal estado, prox_estado : tipo_estado;
signal saida2 : std_logic_vector(4 DOWNTO 0);

type tipo_estado2 is (F1,F2,F3,F4,F5,F6);
signal estado2, prox_estado2 : tipo_estado2;
signal saida3 : std_logic_vector(4 DOWNTO 0);

--  Armazenadores e sinais para algumas saidas --
signal armazenador : std_logic_vector(4 DOWNTO 0);
signal armazenador2 : std_logic_vector(4 DOWNTO 0);
signal somando : std_logic_vector(4 DOWNTO 0);
signal conta2 : std_logic_vector(4 DOWNTO 0);

----Decisão
signal J1, CPU : STD_LOGIC;
----

-- Implementação do somador --
signal N1 : std_logic_vector(4 DOWNTO 0);
signal N2 : std_logic_vector(4 DOWNTO 0);
signal A : std_logic_vector(4 DOWNTO 0);
signal B : std_logic_vector(4 DOWNTO 0);
signal Cin : std_logic;
signal q0 : std_logic;
signal h0 : std_logic;
signal q1 : std_logic;
signal h1 : std_logic;
signal q2 : std_logic;
signal h2 : std_logic;
signal q3 : std_logic;
signal h3 : std_logic;
signal q4 : std_logic;
signal h4 : std_logic;
signal S : std_logic_vector(4 DOWNTO 0);


---------Somador do Bot -------------
signal N1b : std_logic_vector(4 DOWNTO 0);
signal N2b : std_logic_vector(4 DOWNTO 0);
signal C : std_logic_vector(4 DOWNTO 0);
signal D : std_logic_vector(4 DOWNTO 0);
signal Cin2 : std_logic;
signal p0 : std_logic;
signal g0 : std_logic;
signal p1 : std_logic;
signal g1 : std_logic;
signal p2 : std_logic;
signal g2 : std_logic;
signal p3 : std_logic;
signal g3 : std_logic;
signal p4 : std_logic;
signal g4 : std_logic;
signal T : std_logic_vector(4 DOWNTO 0);

signal bot_armazenador : std_logic_vector(4 DOWNTO 0);
signal bot_armazenador2 : std_logic_vector(4 DOWNTO 0);
signal bot_somando : std_logic_vector(4 DOWNTO 0);

-- Bot ------------------
signal  Dado2,an,sinal : std_logic;


-----sinal------

------------------
BEGIN
	Cin &lt;= '0';
	
	
	h0 &lt;= A(0) and B(0);
	q0 &lt;= A(0) xor B(0);
	
	h1 &lt;= A(1) and B(1);
	q1 &lt;= A(1) xor B(1);
	
	h2 &lt;= A(2) and B(2);
	q2 &lt;= A(2) xor B(2);
	
	h3 &lt;= A(3) and B(3);
	q3 &lt;= A(3) xor B(3);
	
	h4 &lt;= A(4) and B(4);
	q4 &lt;= A(4) xor B(4);
	
	
	
	S(0) &lt;= q0 xor Cin;
	
	S(1) &lt;= q1 xor (h0 or (q0 and Cin));
	
	S(2) &lt;= q2 xor (h1 or (q1 and h0) or (q1 and q0 and Cin));
	
	S(3) &lt;= q3 xor (h2 or (q2 and h1) or (q2 and q1 and h0) or (q2 and q1 and q0 and Cin));
	
	S(4) &lt;= q4 xor (h3 or (q3 and h2) or (q3 and q2 and h1) or (q3 and q2 and q1 and h0) or (q3 and q2 and q1 and q0 and Cin));
	
	--- Ainda o somador -- termina aqui!
	
	
	Cin2 &lt;= '0';
	
	g0 &lt;= C(0) and D(0);
	p0 &lt;= C(0) xor D(0);
	
	g1 &lt;= C(1) and D(1);
	p1 &lt;= C(1) xor D(1);
	
	g2 &lt;= C(2) and D(2);
	p2 &lt;= C(2) xor D(2);
	
	g3 &lt;= C(3) and D(3);
	p3 &lt;= C(3) xor D(3);
	
	g4 &lt;= C(4) and D(4);
	p4 &lt;= C(4) xor D(4);
	
	
	
	T(0) &lt;= p0 xor Cin2;
	
	T(1) &lt;= p1 xor (g0 or (p0 and Cin2));
	
	T(2) &lt;= p2 xor (g1 or (p1 and g0) or (p1 and p0 and Cin2));
	
	T(3) &lt;= p3 xor (g2 or (p2 and g1) or (p2 and p1 and g0) or (p2 and p1 and p0 and Cin2));
	
	T(4) &lt;= p4 xor (g3 or (p3 and g2) or (p3 and p2 and g1) or (p3 and p2 and p1 and g0) or (p3 and p2 and p1 and p0 and Cin2));
	---------------------------------------------------------------------------

	-- Aqui o dado foi implementado de maneira que funcionasse juntamente ao somador --
	-- Logo ele armazena as quantidades e soma com o resultado da soma -- 
	
	
	mudaestado: process(Dado,Somar,saida2,armazenador,reset,bot_armazenador)
	begin 
		
		 Dado_visor &lt;= saida2;
		 N1 &lt;= somando;
		 SomaTotal &lt;= S;
		 LstNum_J1 &lt;= armazenador;
		 --- Bot
		N1b &lt;= bot_somando;
		Bot_sum &lt;= T;
		LstNum_CPU &lt;= bot_armazenador;

		if S &gt; T then 
		for i in 0 to 5 loop
			if CPU_turn = '1'  then
				bot_armazenador &lt;= saida3;
				bot_somando &lt;= bot_armazenador;
				C &lt;= bot_armazenador;
			 	if bot_somando = bot_armazenador then
			 		bot_armazenador2 &lt;= saida3;
			 		N2b &lt;= bot_armazenador2;
			 		D &lt;= bot_armazenador2;
			 		if D &gt; "00000" then 
			 			D &lt;= T;
			 		end if;
			 	end if;
			 end if;
			if S &lt; T then 
				exit;
			end if;
		end loop;
		end if;
	 	
		if reset = '1' then 
			SomaTotal &lt;= "00000";
			Bot_sum &lt;= "00000";
			A &lt;= "00000";
			B &lt;= "00000";
			C &lt;= "00000";
			D &lt;= "00000"; 
			somando &lt;= "00000";
			LstNum_CPU &lt;= "00000";
			LstNum_J1 &lt;= "00000";
			bot_somando &lt;= "00000";
		end if;
		
		 	
		if Somar = '1' then
		 	armazenador &lt;= saida2;
		 	somando &lt;= armazenador;
		 	A &lt;= armazenador;
		 	if somando = armazenador then
		 		armazenador2 &lt;= saida2;
		 		N2 &lt;= armazenador2;
		 		B &lt;= armazenador2;
		 		if B &gt; "00000" then 
		 			B &lt;= S;
		 		end if;
		 	end if;
		end if;
		if rising_edge(Dado) and Somar = '0' then 
				 estado &lt;= prox_estado;
		------------------Bot ------------------
		end if;
		
		------------------------------------------
	end process;

	---- Decisão 
		
	J1 &lt;= '1' WHEN Ajd &lt; Bcd ELSE '0' ;
	CPU &lt;= '1' WHEN Ajd &gt; Bcd ELSE '0' ;

	---------
	process(S,T)
	begin
	if  T &gt; "10101"  then 
		J1_w &lt;= '1';
		CPU_w &lt;= '0';
	elsif S &gt; "10101" then 
		J1_w &lt;= '0';
		CPU_w &lt;= '1';
	elsif (S = "10101") then
		J1_w &lt;= '1';
		CPU_w &lt;= '0';
	elsif (T = "10101") then
		J1_w &lt;= '0';
		CPU_w &lt;= '1';
	elsif T &gt; S then
		J1_w &lt;= '0';
		CPU_w &lt;= '1';
	end if;

	end process;

	
	 transicao: process(estado)
	 begin 
		 	case estado is 
		 	when E1 =&gt; prox_estado &lt;= E2;
		 	when E2 =&gt; prox_estado &lt;= E3;
		 	when E3 =&gt; prox_estado &lt;= E4;
		 	when E4 =&gt; prox_estado &lt;= E5;
		 	when E5 =&gt; prox_estado &lt;= E6;
		 	when E6 =&gt; prox_estado &lt;= E1;
		 	end case;
	 end process;
	
	
	saidas: process(estado)
	begin
		case estado is
		when E1 =&gt; saida2 &lt;= "00001";
		when E2 =&gt; saida2 &lt;= "00010";
		when E3 =&gt; saida2 &lt;= "00011";
		when E4 =&gt; saida2 &lt;= "00100";
		when E5 =&gt; saida2 &lt;= "00101";
		when E6 =&gt; saida2 &lt;= "00110";
		end case;
	end process;

	--- segundo contador --- 

	
	
	mudaestado2: process(Dado2,saida3)
	begin
	
	if rising_edge(Dado2) then 
			estado2 &lt;= prox_estado2;
	end if; 
	end process;
	
				 
	 transicao2: process(estado2)
	 begin 
		 	case estado2 is 
		 	when F1 =&gt; prox_estado2 &lt;= F2;
		 	when F2 =&gt; prox_estado2 &lt;= F3;
		 	when F3 =&gt; prox_estado2 &lt;= F4;
		 	when F4 =&gt; prox_estado2 &lt;= F5;
		 	when F5 =&gt; prox_estado2 &lt;= F6;
		 	when F6 =&gt; prox_estado2 &lt;= F1;
		 	end case;
	 end process;
	
	
	saidas2: process(estado2)
	begin
		case estado2 is
		when F1 =&gt; saida3 &lt;= "00001";
		when F2 =&gt; saida3 &lt;= "00010";
		when F3 =&gt; saida3 &lt;= "00011";
		when F4 =&gt; saida3 &lt;= "00100";
		when F5 =&gt; saida3 &lt;= "00101";
		when F6 =&gt; saida3 &lt;= "00110";
		end case;
	end process;

	process
	begin
	an &lt;= '1';
	wait for 100 ns;
	Dado2 &lt;= '1';
	wait for 100 ns;
	Dado2 &lt;= '0';
	wait for 100 ns;
	Dado2 &lt;= '1';
	wait for 100 ns;
	an &lt;= '0';
	end process;

	
END TypeArchitecture;
</vhdl>
  <vhdl name="decoder1">--------------------------------------------------------------------------------
-- Project :
-- File    :
-- Autor   :
-- Date    :
--
--------------------------------------------------------------------------------
-- Description :
-- FAZER UM DECODER COM 1-1, 1-2, 1-3
-- E OUTRO COM 2 DE 12, 3 DE 13...
--------------------------------------------------------------------------------

LIBRARY ieee;
USE ieee.std_logic_1164.all;

entity decoder1 is

    port
    (
       entradas : IN std_logic_vector(4 DOWNTO 0);
       a,b,c,d,e,f,g : OUT std_logic
    );
end decoder1;

architecture TypeArchitecture of decoder1 is
    signal S : std_logic_vector(0 to 6);
begin
    with entradas select
        S &lt;= "1111110" when "00000", -- '0'
        "1111110" when "00001", -- '0'
        "1111110" when "00010", -- '0'
        "1111110" when "00011", -- '0'
        "1111110" when "00100", -- '0'
        "1111110" when "00101", -- '0'
        "1111110" when "00110", -- '0'
        "1111110" when "00111", -- '0'
        "1111110" when "01000", -- '0'
        "1111110" when "01001", -- '0'
        "0110000" when "01010", -- '1'
        "0110000" when "01011", -- '1'
        "0110000" when "01100", -- '1'
        "0110000" when "01101", -- '1'
        "0110000" when "01110", -- '1'
        "0110000" when "01111", -- '1'
        "0110000" when "10000", -- '1'
        "0110000" when "10001", -- '1'
        "0110000" when "10010", -- '1'
        "0110000" when "10011", -- '1'
        "1101101" when "10100", -- '2'
        "1101101" when "10101", -- '2'
        "1101101" when "10110", -- '2'
        "1101101" when "10111", -- '2'
        "1101101" when "11000", -- '2'
        "1101101" when "11001", -- '2'
        "1101101" when "11010", -- '2'
        
        "0000000" when others;

a &lt;= S(0);
b &lt;= S(1);
c &lt;= S(2);
d &lt;= S(3);
e &lt;= S(4);
f &lt;= S(5);
g &lt;= S(6);

END TypeArchitecture;
</vhdl>
  <vhdl name="decoder2">--------------------------------------------------------------------------------
-- Project :
-- File    :
-- Autor   :
-- Date    :
--
--------------------------------------------------------------------------------
-- Description :
-- FAZER UM DECODER COM 1-1, 1-2, 1-3
-- E OUTRO COM 2 DE 12, 3 DE 13...
--------------------------------------------------------------------------------

LIBRARY ieee;
USE ieee.std_logic_1164.all;

entity decoder2 is

    port
    (
       entradas : IN std_logic_vector(4 DOWNTO 0);
       a,b,c,d,e,f,g : OUT std_logic
    );
end decoder2;

architecture TypeArchitecture of decoder2  is
    signal S : std_logic_vector(0 to 6);
begin
    with entradas select
        S &lt;= "1111110" when "00000", -- '0'
        "0110000" when "00001", -- '1'
        "1101101" when "00010", -- '2'
        "1111001" when "00011", -- '3'
        "0110011" when "00100", -- '4'
        "1011011" when "00101", -- '5'
        "1011111" when "00110", -- '6'
        "1110000" when "00111", -- '7'
        "1111111" when "01000", -- '8'
        "1110011" when "01001", -- '9'
        "1111110" when "01010", -- '0'
        "0110000" when "01011", -- '1'
        "1101101" when "01100", -- '2'
        "1111001" when "01101", -- '3'
        "0110011" when "01110", -- '4'
        "1011011" when "01111", -- '5'
        "1011111" when "10000", -- '6'
        "1110000" when "10001", -- '7'
        "1111111" when "10010", -- '8'
        "1110011" when "10011", -- '9'
        "1111110" when "10100", -- '0'
        "0110000" when "10101", -- '1'
        "1101101" when "10110", -- '2'
        "1111001" when "10111", -- '3'
        "0110011" when "11000", -- '4'
        "1011011" when "11001", -- '5'
        "1011111" when "11010", -- '6'
        "XXXXXXX" when others;

a &lt;= S(0);
b &lt;= S(1);
c &lt;= S(2);
d &lt;= S(3);
e &lt;= S(4);
f &lt;= S(5);
g &lt;= S(6);


END TypeArchitecture;
</vhdl>
  <vhdl name="decoder_dado">--------------------------------------------------------------------------------
-- Project :
-- File    :
-- Autor   :
-- Date    :
--
--------------------------------------------------------------------------------
-- Description :
-- FAZER UM DECODER COM 1-1, 1-2, 1-3
-- E OUTRO COM 2 DE 12, 3 DE 13...
--------------------------------------------------------------------------------

LIBRARY ieee;
USE ieee.std_logic_1164.all;

entity decoder_dado is

    port
    (
       entradas : IN std_logic_vector(4 DOWNTO 0);
       a,b,c,d,e,f,g : OUT std_logic
    );
end decoder_dado;

architecture TypeArchitecture of decoder_dado  is
    signal S : std_logic_vector(0 to 6);
begin
    with entradas select
        S &lt;= "0110000" when "00001", -- '1'
        "1101101" when "00010", -- '2'
        "1111001" when "00011", -- '3'
        "0110011" when "00100", -- '4'
        "1011011" when "00101", -- '5'
        "1011111" when "00110", -- '6'
        "0000000" when others;

a &lt;= S(0);
b &lt;= S(1);
c &lt;= S(2);
d &lt;= S(3);
e &lt;= S(4);
f &lt;= S(5);
g &lt;= S(6);

END TypeArchitecture;
</vhdl>
  <vhdl name="decisao">--------------------------------------------------------------------------------&#13;
-- Project :&#13;
-- File    :&#13;
-- Autor   :&#13;
-- Date    :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
-- Description :&#13;
--&#13;
--------------------------------------------------------------------------------&#13;
&#13;
LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
&#13;
ENTITY decisao IS&#13;
  PORT (&#13;
    Ajd, Bcd: IN STD_LOGIC_VECTOR(4 DOWNTO 0) ;
    
    win  : IN STD_LOGIC;
    CPU_w,J1_W,draw : OUT STD_LOGIC
    
    

    );&#13;
END decisao;&#13;
&#13;
--------------------------------------------------------------------------------&#13;
--Complete your VHDL description below&#13;
--------------------------------------------------------------------------------&#13;
&#13;
ARCHITECTURE TypeArchitecture OF decisao IS&#13;
&#13;signal J1, CPU : STD_LOGIC;
begin
&#13;J1 &lt;= '1' WHEN Ajd &gt; Bcd ELSE '0' ;
CPU &lt;= '1' WHEN Ajd &lt; Bcd ELSE '0' ;

process(win)
begin
if win = '1' and J1 = '1' then 
	draw &lt;= '0';
	J1_w &lt;= '1';
	CPU_w &lt;= '0';
elsif win = '1' and CPU = '1' then 
	draw &lt;= '0';
	J1_w &lt;= '0';
	CPU_w &lt;= '1';
elsif win = '1' and CPU = '0' and J1 = '0' then
	draw &lt;= '1';
	J1_w &lt;= '0';
	CPU_w &lt;= '0';
	
end if;
end process;
	


END TypeArchitecture;&#13;
</vhdl>
  <vhdl name="decoder_placar">--------------------------------------------------------------------------------
-- Project :
-- File    :
-- Autor   :
-- Date    :
--
--------------------------------------------------------------------------------
-- Description :
-- FAZER UM DECODER COM 1-1, 1-2, 1-3
-- E OUTRO COM 2 DE 12, 3 DE 13...
--------------------------------------------------------------------------------

LIBRARY ieee;
USE ieee.std_logic_1164.all;

entity decoder_placar is

    port
    (
       entradas : IN std_logic;
       a,b,c,d,e,f,g : OUT std_logic
    );
end decoder_placar;

architecture TypeArchitecture of decoder_placar  is
    signal S : std_logic_vector(0 to 6);
begin
    with entradas select
        S &lt;= "1111110" when '0', -- '0'
        "0110000" when '1', -- '1'
        "0000000" when others;

a &lt;= S(0);
b &lt;= S(1);
c &lt;= S(2);
d &lt;= S(3);
e &lt;= S(4);
f &lt;= S(5);
g &lt;= S(6);


END TypeArchitecture;
</vhdl>
  <vhdl name="decisao2">--------------------------------------------------------------------------------
-- Project :
-- File    :
-- Autor   :
-- Date    :
--
--------------------------------------------------------------------------------
-- Description :
--
--------------------------------------------------------------------------------

LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY decisao2 IS
  PORT (
    Ajd, Bcd: IN STD_LOGIC_VECTOR(4 DOWNTO 0) ;
   
    sinal : OUT STD_LOGIC
    
    

    );
END decisao2;

--------------------------------------------------------------------------------
--Complete your VHDL description below
--------------------------------------------------------------------------------

ARCHITECTURE TypeArchitecture OF decisao2 IS

signal J1, CPU : STD_LOGIC;
begin

J1 &lt;= '1' WHEN Ajd &gt; Bcd ELSE '0' ;
CPU &lt;= '1' WHEN Ajd &lt; Bcd ELSE '0' ;

process
begin
if CPU = '1' and J1 = '1' then 
	sinal &lt;= '1';

end if;
end process;
	


END TypeArchitecture;
</vhdl>
</project>
